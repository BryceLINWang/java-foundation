**题目描述**
小易有一些彩色的砖块。每种颜色由一个大写字母表示。各个颜色砖块看起来都完全一样。现在有一个给定的字符串s,s中每个字符代表小易的某个砖块的颜色。小易想把他所有的砖块排成一行。如果最多存在一对不同颜色的相邻砖块,那么这行砖块就很漂亮的。请你帮助小易计算有多少种方式将他所有砖块排成漂亮的一行。(如果两种方式所对应的砖块颜色序列是相同的,那么认为这两种方式是一样的。)
例如: s = "ABAB",那么小易有六种排列的结果:
"AABB","ABAB","ABBA","BAAB","BABA","BBAA"
其中只有"AABB"和"BBAA"满足最多只有一对不同颜色的相邻砖块。

本体看似有些难理解，其实核心就是统计不同字符的个数，如果存在三种及以上则有0种排布（没有最多存在一对不同颜色的相邻砖块的情况），两种则输出2，一种为1。

```java

import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class 彩色的砖块 {
    public static void main(String[] args) {
        Scanner s=new Scanner(System.in);
        String str=s.nextLine();
        Set set=new HashSet();
        for(int i=0;i<str.length();i++) {
            set.add(str.substring(i, i + 1));
        }
           if(set.size()>=3){
               System.out.println(0);
           }else{
               System.out.println(set.size());
           }
        }
    }
```
